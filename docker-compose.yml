version: '3.7'

networks:
  shared-network:
    driver: bridge
    name: shared-network
    external: true

volumes: 
  shared-volume:
    driver: local
    name: redis-example-volume

services: 
  redis:
    image: redis:latest
    container_name: redis
    networks:
      - shared-network
    volumes:
      - shared-volume:/redis-data
    ports:
      - "6379:6379"
    environment:
      - REDIS_PASSWORD=${REDIS_PASSWORD}
    command: 
      - redis-server
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 30s
      retries: 3
      start_period: 10s

  redis.example.web:
    image: ${DOCKER_REGISTRY-}redis.example.web
    container_name: redis.example.web
    build:
      context: .
      dockerfile: RedisExample.Web/Dockerfile
    networks:
      - shared-network
    volumes:
      - shared-volume:/redis-web-data
    ports:
      - "5001:8080"
    depends_on:
      redis:
        condition: service_healthy
    environment:
      - ASPNETCORE_ENVIRONMENT=${ENVIRONMENT}
      - Redis:Host=redis
      - Redis:Port=6379
      - Redis:Password=${REDIS_PASSWORD}
      - Redis:Database=0
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5001"]
      interval: 5s
      timeout: 30s
      retries: 3
      start_period: 10s